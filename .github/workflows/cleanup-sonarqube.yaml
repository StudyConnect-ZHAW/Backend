name: Cleanup SonarQube PR Projects

on:
  schedule:
    - cron: '0 2 * * *'  # Every night at 2 AM UTC
  workflow_dispatch:      # Also allow manual triggering
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  cleanup:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo (needed for `gh` CLI context)
        uses: actions/checkout@v4

      - name: Fetch all PRs
        id: fetch_prs
        run: |
          gh pr list --state all --json number,state --repo ${{ github.repository }} > prs.json
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Cleanup SonarQube Projects for Closed PRs
        env:
          SONAR_TOKEN: ${{ secrets.SONARQUBE_BACKEND_TOKEN }}
          SONAR_HOST_URL: ${{ secrets.SONAR_HOST_URL }}
        run: |
          echo "üìã Scanning PRs for cleanup..."
          jq -c '.[]' prs.json | while read -r pr; do
            number=$(echo "$pr" | jq -r '.number')
            state=$(echo "$pr" | jq -r '.state')

            if [ "$state" = "OPEN" ]; then
              echo "‚û°Ô∏è Skipping open PR: $number"
              continue
            fi

            projectKey="StudyConnect-pr-$number"
            echo "üßπ Deleting SonarQube project: $projectKey"

            response=$(curl -s -o /dev/null -w "%{http_code}" -X POST \
              "$SONAR_HOST_URL/api/projects/delete?project=$projectKey" \
              -u "$SONAR_TOKEN:")

            if [ "$response" -eq 204 ]; then
              echo "‚úÖ Successfully deleted: $projectKey"
            elif [ "$response" -eq 403 ]; then
              echo "‚ùå Skipped (Insufficient privileges): $projectKey"
            elif [ "$response" -eq 404 ]; then
              echo "‚ÑπÔ∏è Project not found: $projectKey"
            else
              echo "‚ö†Ô∏è Unexpected error (HTTP $response) deleting $projectKey"
            fi
          done